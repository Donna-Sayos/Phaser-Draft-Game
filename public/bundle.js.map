{"version":3,"file":"./public/bundle.js","mappings":"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","sources":["webpack://phaser-draft-game/./js/scenes/CaveScene.js","webpack://phaser-draft-game/./js/scenes/DesertScene.js","webpack://phaser-draft-game/./js/scenes/loadScene.js","webpack://phaser-draft-game/./js/scenes/StartScene.js","webpack://phaser-draft-game/./js/scenes/ToBeContinued.js","webpack://phaser-draft-game/./js/index.js"],"sourcesContent":["let player;\n// let cursors;\nlet invisibox;\n\nexport default class CaveScene extends Phaser.Scene {\n    constructor () {\n        super({ key: \"CaveScene\" });\n    }\n\n    preload () {\n        this.load.image('background', 'public/assets/bg/goblin-cave.png');\n        this.load.image('box', 'public/assets/objects/nobody.png');\n        this.load.spritesheet('baby', 'public/assets/sprites/mini-naked-baby.png', { frameWidth: 37, frameHeight: 58 });\n    }\n\n    create () {\n        this.cameras.main.setBounds(0, 0, 1024, 2000);\n\n        this.add.image(0, 0, 'background').setOrigin(0);\n\n        player = this.physics.add.sprite(180, 140, 'baby');\n        player.body.setSize(23, 26).setOffset(7.5, 25);\n        // player.setCollideWorldBounds(true);\n        player.body.allowGravity = false;\n        player.setGravity(0, 0);\n        player.setVelocityY(0);\n\n        this.cameras.main.startFollow(player); // .09, .09\n        this.cameras.main.setZoom(2);\n\n        invisibox = this.physics.add.image(155, 915, 'box').setScale(2).refreshBody().setImmovable(true);\n        invisibox.body.setSize(100, 30).setOffset(35, 110); // .setSize adjusts the size of the bounding box; .setOffset adjusts the location of the bounding box;\n        invisibox.body.allowGravity = false; \n\n        this.cursors = this.input.keyboard.createCursorKeys();\n\n        this.anims.create({\n            key: 'down',\n            frames: this.anims.generateFrameNumbers('baby', {\n                frames: [0, 1, 2, 3]\n            }),\n            frameRate: 10,\n            repeat: -1\n        });\n\n        this.anims.create({\n            key: 'left',\n            frames: this.anims.generateFrameNumbers('baby', { start: 4, end: 7 }),\n            frameRate: 10, // The frame rate of playback in frames per second (default 24 if duration is null);\n            repeat: -1\n        });\n    \n        this.anims.create({\n            key: 'right',\n            frames: this.anims.generateFrameNumbers('baby', {\n                frames: [8, 9, 10, 11]\n            }),\n            frameRate: 20,\n            repeat: -1\n        });\n\n        this.anims.create({\n            key: 'walkup',\n            frames: this.anims.generateFrameNumbers('baby', {\n                frames: [12, 13, 14, 15]\n            }),\n            frameRate: 20,\n            repeat: -1\n        });\n\n        this.anims.create({\n            key: 'turn',\n            frames: [ { key: 'baby', frames: 0 } ],\n            frameRate: 20\n        });\n\n        this.physics.add.collider(player, invisibox);\n    }\n\n    update () {\n        \n        if (this.cursors.left.isDown) {\n            player.setVelocityX(-160);\n            // player.setAngle(-90);\n            player.anims.play('left', true);\n        } else if (this.cursors.right.isDown) {\n            player.setVelocityX(160);\n            // player.setAngle(90); // rotates the player 90 when walking right;\n            player.anims.play('right', true);\n        } else if (this.cursors.up.isDown) {\n            player.setVelocityY(-110);\n            player.anims.play('walkup', true);\n        } else if (this.cursors.down.isDown) {\n            player.setVelocityY(180);\n            player.anims.play('down', true);\n        } else {\n            player.setVelocityX(0);\n            player.anims.play('turn');\n        }\n    \n        // if (cursors.up.isDown && player.body.touching.down) {\n        //     player.setAngle(0).setVelocityY(-360); // .setAngle(-180);\n        // }\n    }\n};","let player;\nlet iceCreams;\nlet poops;\nlet portals;\nlet platform1;\nlet platform2;\nlet movingPlatform1;\nlet movingPlatform2;\nlet movingPlatform3;\nlet movingPlatform4;\nlet stoneBlock;\nlet stoneBlockA;\nlet cursors;\nlet gameOver = false;\nlet scoreText;\nconst gameState = {\n    score: 0\n}\n\nexport default class DesertScene extends Phaser.Scene {\n    constructor () {\n        super({ key: \"DesertScene\" });\n    }\n\n    preload () { // where to load images or sounds;\n        this.load.image('desert', 'public/assets/bg/desert.png');\n        this.load.image('ground', 'public/assets/tiles/desert-platform.png');\n        this.load.image('mini', 'public/assets/tiles/mini-platform.png');\n        this.load.image('iceCream', 'public/assets/objects/iceCream.png');\n        this.load.image('poop', '/public/assets/objects/poop.png');\n        this.load.image('stone-block', 'public/assets/objects/StoneBlock.png');\n        this.load.image('portal', 'public/assets/objects/portal.png');\n        this.load.spritesheet('baby', 'public/assets/sprites/mini-naked-baby.png', { frameWidth: 37, frameHeight: 58 }); // 57, 70\n        this.load.audio('pickup-audio', 'public/assets/audio/pickup.mp3');\n        this.load.audio('explosion-audio', 'public/assets/audio/explosion.mp3');\n        this.load.audio('portal-audio', 'public/assets/audio/portal-audio.mp3');\n    }\n\n    create () { // where to define objects;\n        this.cameras.main.setBounds(0, 0, 1024, 2000);\n\n        //  A simple background for the game\n        this.add.image(0, 0, 'desert').setOrigin(0).setScrollFactor(1);\n\n        // adds the floor for the game; here we create the ground. Scale it to fit the width of the game \n        platform1 = this.physics.add.image(530, this.game.renderer.height + 40 , 'ground').setScale(2).refreshBody().setImmovable(true); // floor;\n        platform1.body.setSize(400, 30).setOffset(35, 110); // .setSize adjusts the size of the bounding box; .setOffset adjusts the location of the bounding box;\n        platform1.body.allowGravity = false;\n    \n    \n        // adds some ledges\n        platform2 = this.physics.add.image(100, 350, 'ground').setImmovable(true); // 2nd ledge;\n        platform2.body.setSize(275, 30).setOffset(160, 110);\n        platform2.body.allowGravity = false;\n    \n        movingPlatform1 = this.physics.add.image(650, 470, 'mini').setImmovable(true); // 3rd\n        movingPlatform1.body.setSize(150, 40).setOffset(150, 194);\n        movingPlatform1.body.allowGravity = false;\n        movingPlatform1.setVelocityX(50);\n    \n        movingPlatform2 = this.physics.add.image(780, 220, 'ground').setImmovable(true); // 1st ledge;\n        movingPlatform2.body.setSize(300, 30).setOffset(24, 110);\n        movingPlatform2.body.allowGravity = false;\n        movingPlatform2.setVelocityY(50);\n\n        movingPlatform3 = this.physics.add.image(650, this.game.renderer.height - 250, 'mini').setImmovable(true); // bot mini ledge;\n        movingPlatform3.body.setSize(150, 40).setOffset(150, 194);\n        movingPlatform3.body.allowGravity = false;\n        movingPlatform3.setVelocityX(50);\n\n        movingPlatform4 = this.physics.add.image(500, 800, 'mini').setImmovable(true); // 4th ledge;\n        movingPlatform4.body.setSize(150, 30).setOffset(150, 194);\n        movingPlatform4.body.allowGravity = false;\n        movingPlatform4.setVelocityY(50);\n\n        stoneBlockA = this.physics.add.staticGroup();\n\n        stoneBlockA.create(650, this.game.renderer.height - 150, 'stone-block'); // mid;\n        stoneBlockA.create(730, this.game.renderer.height - 400, 'stone-block'); // right;\n        stoneBlockA.create(150, this.game.renderer.height - 300, 'stone-block'); // left;\n\n        stoneBlock = this.physics.add.image(70, this.game.renderer.height - 150, 'stone-block').setImmovable(true); // moving stone block;\n        stoneBlock.body.allowGravity = false;\n        stoneBlock.setVelocity(100, -100);\n\n        this.tweens.timeline({\n            targets: stoneBlock.body.velocity,\n            loop: -1,\n            tweens: [\n              { x:    0, y: -180, duration: 2000, ease: 'Stepped' },\n              { x:    0, y:    0, duration: 1000, ease: 'Stepped' },\n              { x:  150, y:  80, duration: 4000, ease: 'Stepped' },\n              { x:    0, y: -180, duration: 2000, ease: 'Stepped' },\n              { x:    0, y:    0, duration: 1000, ease: 'Stepped' },\n              { x: -150, y:  100, duration: 4000, ease: 'Stepped' }\n            ]\n        });\n    \n        // The player and its settings\n        gameState.player = this.physics.add.sprite(20, 350, 'baby');\n        gameState.player.body.setSize(23, 26).setOffset(7.5, 25); // 30, 35 || 13, 28\n    \n        //  gameState.Player physics properties. Give the little guy a slight bounce.\n        gameState.player.setBounce(0.5);\n        gameState.player.setCollideWorldBounds(true);\n\n        // to have the camera focus on the player;\n        this.cameras.main.startFollow(gameState.player); // .09, .09\n        this.cameras.main.setZoom(1.2);\n        this.cameras.main.roundPixels = true;\n    \n        // gameState.player animations, turning, walking left and walking right.\n        this.anims.create({\n            key: 'left',\n            frames: this.anims.generateFrameNumbers('baby', { start: 4, end: 7 }),\n            frameRate: 10, // The frame rate of playback in frames per second (default 24 if duration is null);\n            repeat: -1\n        });\n    \n        this.anims.create({\n            key: 'turn',\n            frames: [ { key: 'baby', frames: 0 } ],\n            frameRate: 20\n        });\n    \n        this.anims.create({\n            key: 'right',\n            frames: this.anims.generateFrameNumbers('baby', { start: 8, end: 11 }),\n            frameRate: 10,\n            repeat: -1\n        });\n\n        // sounds\n        this.pickUpSound = this.sound.add(\"pickup-audio\");\n        this.explosionSound = this.sound.add(\"explosion-audio\");\n        this.portalSound = this.sound.add(\"portal-audio\");\n    \n        //  Input Events\n        cursors = this.input.keyboard.createCursorKeys();\n    \n        //  Some iceCreams to collect, 15 in total, evenly spaced 70 pixels apart along the x axis\n        iceCreams = this.physics.add.group({\n            key: 'iceCream',\n            repeat: 14,\n            setXY: { x: 12, y: 0, stepX: 55 }\n        });\n        \n    \n        iceCreams.children.iterate(function (child) {\n    \n            //  Give each iceCream a slightly different bounce\n            child.setBounceY(Phaser.Math.FloatBetween(0.4, 0.6)); \n    \n        });\n    \n        poops = this.physics.add.group();\n        portals = this.physics.add.group();\n    \n        //  The score\n        gameState.scoreText = this.add.text(14, 14, 'score: 0', { fontSize: '40px', fill: '#000' });\n           \n        //  Collide the gameState.player and the iceCreams with the platforms\n        this.physics.add.collider(gameState.player, platform1);\n        this.physics.add.collider(gameState.player, platform2);\n        this.physics.add.collider(gameState.player, stoneBlock);\n        this.physics.add.collider(gameState.player, stoneBlockA);\n        this.physics.add.collider(gameState.player, movingPlatform1);\n        this.physics.add.collider(gameState.player, movingPlatform2);\n        this.physics.add.collider(gameState.player, movingPlatform3);\n        this.physics.add.collider(gameState.player, movingPlatform4);\n        \n        this.physics.add.collider(iceCreams, platform1);\n        this.physics.add.collider(iceCreams, platform2);\n        this.physics.add.collider(iceCreams, stoneBlock);\n        this.physics.add.collider(iceCreams, stoneBlockA);\n        this.physics.add.collider(iceCreams, movingPlatform1);\n        this.physics.add.collider(iceCreams, movingPlatform2);\n        this.physics.add.collider(iceCreams, movingPlatform3);\n        this.physics.add.collider(iceCreams, movingPlatform4);\n\n        this.physics.add.collider(portals, platform1);\n        this.physics.add.collider(portals, platform2);\n        this.physics.add.collider(portals, stoneBlock);\n        this.physics.add.collider(portals, stoneBlockA);\n        this.physics.add.collider(portals, movingPlatform1);\n        this.physics.add.collider(portals, movingPlatform2);\n        this.physics.add.collider(portals, movingPlatform3);\n        this.physics.add.collider(portals, movingPlatform4);\n    \n        this.physics.add.collider(poops, platform1);\n        this.physics.add.collider(poops, platform2);\n        this.physics.add.collider(poops, stoneBlock);\n        this.physics.add.collider(poops, stoneBlockA);\n        this.physics.add.collider(poops, portals);\n        this.physics.add.collider(poops, movingPlatform1);\n        this.physics.add.collider(poops, movingPlatform2);\n        this.physics.add.collider(poops, movingPlatform3);\n        this.physics.add.collider(poops, movingPlatform4);\n            \n        //  Checks to see if the gameState.player overlaps with any of the iceCreams, if he does call the collecticeCream function\n        this.physics.add.overlap(gameState.player, iceCreams, this.collecticeCream, null, this);\n        this.physics.add.collider(gameState.player, poops, this.hitpoop, null, this);\n        this.physics.add.collider(gameState.player, portals, this.hitPortal, null, this);\n    }\n\n    update () { // where the loop goes; \n        if (cursors.left.isDown) {\n            gameState.player.setVelocityX(-160);\n            // gameState.player.setAngle(-90);\n    \n            gameState.player.anims.play('left', true);\n        } else if (cursors.right.isDown) {\n            gameState.player.setVelocityX(160);\n            // gameState.player.setAngle(90); // rotates the player 90 when walking right;\n    \n            gameState.player.anims.play('right', true);\n        } else {\n            gameState.player.setVelocityX(0);\n    \n            gameState.player.anims.play('turn');\n        }\n    \n        if (cursors.up.isDown && gameState.player.body.touching.down) {\n            gameState.player.setAngle(0).setVelocityY(-360); // .setAngle(-180);\n        }\n    \n        if (movingPlatform1.x >= 700) {\n            movingPlatform1.setVelocityX(-100); \n        } else if (movingPlatform1.x <= 300) {\n            movingPlatform1.setVelocityX(100);\n        }\n    \n        if (movingPlatform2.y >= 300) {\n            movingPlatform2.setVelocityY(-50); \n        } else if (movingPlatform2.y <= 100) {\n            movingPlatform2.setVelocityY(50); \n        }\n\n        if (movingPlatform3.x >= 700) {\n            movingPlatform3.setVelocityX(-100); \n        } else if (movingPlatform3.x <= 300) {\n            movingPlatform3.setVelocityX(100);\n        }\n\n        if (movingPlatform4.y >= 800) {\n            movingPlatform4.setVelocityY(-90); \n        } else if (movingPlatform4.y <= 550) {\n            movingPlatform4.setVelocityY(50); \n        }\n\n        if (stoneBlock.y >= 300) {\n            stoneBlock.setVelocityY(-60); \n        } else if (stoneBlock.y <= 200) {\n            stoneBlock.setVelocityY(60); \n        }\n    }\n\n    collecticeCream = (player, iceCream) => {\n        iceCream.disableBody(true, true);\n\n        this.pickUpSound.play();\n    \n        //  Add and update the score\n        gameState.score += 10;\n        gameState.scoreText.setText(`score: ${gameState.score}`);\n    \n        if (iceCreams.countActive(true) === 5) {\n            //  A new batch of iceCreams to collect\n            iceCreams.children.iterate(function (child) {\n    \n                child.enableBody(true, child.x, 0, true, true);\n    \n            });\n            let x = (player.x < 400) ? Phaser.Math.Between(400, 800) : Phaser.Math.Between(0, 400);\n    \n            let poop = poops.create(x, 20, 'poop'); \n            poop.setBounce(1);\n            poop.setSize(25, 23).setOffset(12, 15);\n            poop.setCollideWorldBounds(true);\n            poop.setVelocity(Phaser.Math.Between(-200, 200), 20);\n            poop.allowGravity = false;  \n        } else {\n            if (gameState.score === 10) {\n\n                let x = (player.x < 400) ? Phaser.Math.Between(400, 800) : Phaser.Math.Between(0, 400);\n\n                let portal = portals.create(x, 30, 'portal');\n                portal.setSize(100, 100).setOffset(17, 19);\n                portal.setVelocity(Phaser.Math.Between(-200, 200), 20);\n                portal.setCollideWorldBounds(true);\n                portal.allowGravity = false;\n            }\n        }\n    }\n\n    hitPortal = (player, portal) => {\n        this.portalSound.play();\n        player.setTint(0x00ff00);\n        this.scene.start('ToBeContinued');\n\n        player.setScale\n    }\n\n    hitpoop = (player, poop) => {\n        this.explosionSound.play();\n\n        this.physics.pause();\n    \n        player.setTint(0xff0000); // gives the gameState.player a red tint when hit;\n        this.add.text(this.game.renderer.width / 2.5, this.game.renderer.height * 0.20, 'Game Over', { font: '30px monospace', fill: '#000000' });\n        this.add.text(this.game.renderer.width / 2.5, this.game.renderer.height * 0.40, 'Click to restart', { font: '20px monospace', fill: '#000000' });\n\n        this.input.on(\"pointerup\", () => {\n            gameState.score = 0;\n            this.scene.restart();\n        });\n\n        player.anims.play('turn');\n    \n        gameOver = true;\n    }\n};","export default class LoadScene extends Phaser.Scene {\n    constructor () {\n        super({ key: \"loadScene\" });\n    }\n\n    loadAudio = () => {\n        this.load.setPath(\"public/assets/audio\");\n    }\n\n    loadBg = () => {\n        this.load.setPath(\"public/assets/bg\");\n    }\n\n    loadObjects = () => {\n        this.load.setPath(\"public/assets/objects\");\n    }\n\n    preload () {\n        this.load.spritesheet('baby', 'public/assets/sprites/mini-naked-baby.png', { frameWidth: 37, frameHeight: 58 });\n        this.load.image('ground', 'public/assets/tiles/desert-platform.png');\n        this.load.image('lol', 'public/assets/objects/lol.png');\n\n        this.loadAudio();\n        this.loadBg();\n        this.loadObjects();\n\n        let width = this.cameras.main.width;\n        let height = this.cameras.main.height;\n        \n        let loadingText = this.make.text({\n            x: width / 2,\n            y: height /2 -10,\n            text: 'Loading...',\n            style: {\n                font: '30px monospace',\n                fill: '#ffffff'\n            }\n        });\n        loadingText.setOrigin(0.5, 0.5);\n\n        let percent = this.make.text({\n            x: width / 2,\n            y: height / 2 - 5,\n            text: '0%',\n            style: 'monospace',\n            fill: '#ffffff'\n        });\n        percent.setOrigin(0.5, -2);\n        percent.depth = 1; // allows the percent to appear on top of the loading bar;\n\n        let assetsText = this.make.text({\n            x: width / 2,\n            y: height / 2 + 50,\n            text: '',\n            style: {\n                font: '20px monospace',\n                fill: \"#ffffff\"\n            }\n        });\n        assetsText.setOrigin(0.5, -2);\n\n        let loadingBar = this.add.graphics();\n        let loadingBox = this.add.graphics();\n\n        loadingBox.fillStyle(0x222222, 0.8);\n        loadingBox.fillRect(140, this.game.renderer.height / 2, 520, 70); // .fillRect(x, y, width, height);\n\n        // to make the loading bar load slower;\n        for (let i = 0; i < 500; i++) {\n            this.load.spritesheet(\"butt\" + i, \"public/assets/objects/butt.png\");\n        };\n\n        this.load.on(\"progress\", (num) => {\n            loadingBar.clear();\n            loadingBar.fillStyle(0xffffff, 1);\n            loadingBar.fillRect(150, this.game.renderer.height / 1.97, 500 * num, 60);\n\n            percent.setText(parseInt(num * 100) + '%');\n        });\n\n        this.load.on(\"fileprogress\", (file) => {\n            assetsText.setText('Loading asset: ' + file.key) // file.src - will only show the source of the file being loaded;\n        })\n\n        this.load.on(\"complete\", () => {\n            console.log('Loading comple...');\n\n            loadingBar.destroy();\n            loadingBox.destroy();\n            loadingText.destroy();\n            percent.destroy();\n            assetsText.destroy();\n        })\n    }\n\n    create () {\n        this.add.image(400, 550, 'lol');\n        setTimeout(() => {\n            this.scene.start(\"StartScene\");\n        }, 800);\n    }\n};\n\n/*\n    Loader Events:\n\n    complete - when done loading everything\n    progress - loader number progress in decimal\n    fileprogress - A reference to the File which errored during load\n*/","export default class StartScene extends Phaser.Scene {\n    constructor () {\n        super({ key: \"StartScene\" });\n    }\n\n    preload () {\n        this.load.spritesheet('baby', 'public/assets/sprites/mini-naked-baby.png', { frameWidth: 37, frameHeight: 58 }); // 57, 65\n        this.load.image('background', 'public/assets/bg/desert.png');\n        this.load.image('play-button', 'public/assets/objects/play_button.png');\n        this.load.audio('music', 'public/assets/audio/cave.mp3');\n    }\n\n    onClicked = () => {\n        this.scene.start(\"DesertScene\");\n    }\n\n    create () {\n        // to have a fade effect when entering the scene;\n        this.cameras.main.fadeFrom(2000, Phaser.Math.Between(50, 255), Phaser.Math.Between(50, 255), Phaser.Math.Between(50, 255), Phaser.Math.Between(50, 255));\n\n        this.add.image(0, 0, 'background').setOrigin(0);\n\n        this.add.text(this.game.renderer.width / 3.7, this.game.renderer.height * 0.20, 'Play with me 😏', { font: '50px monospace', fill: '#ffffff' });\n\n        let player = this.physics.add.sprite(150, 350, 'baby').setCollideWorldBounds(true);\n        player.body.allowGravity = false;\n        player.setScale(1.5);\n        player.setVisible(false);\n\n        this.sound.pauseOnBlur = false;\n        this.sound.play('music', { loop: true });\n\n        this.anims.create({\n            key: 'walk',\n            framRate: 4,\n            repeat: -1, // repeat forever;\n            frames: this.anims.generateFrameNumbers('baby', {\n                frames: [0, 1, 2, 3]\n            })\n        });\n\n        let playButton = this.add.image(this.game.renderer.width / 2, this.game.renderer.height / 2, 'play-button').setDepth(1);\n        playButton.setInteractive();\n\n        playButton.on(\"pointerover\", () => {\n            player.setVisible(true);\n            player.play(\"walk\");\n            player.x = playButton.x - playButton.width;\n            player.y = playButton.y;\n        })\n        playButton.on(\"pointerup\", this.onClicked, this);\n    }\n};\n\n/* \n    PointerEvents:\n\n    pointerover - hovering\n    pointerout - not hovering\n    pointerup - click and release\n    pointerdown - just click\n*/","export default class ToBeContinued extends Phaser.Scene {\n    constructor () {\n        super({ key: \"ToBeContinued\" });\n    }\n\n    preload () {\n        this.load.image('incomplete', 'public/assets/bg/thanks.jpg');\n        this.load.image('troll', 'public/assets/objects/troll.png');\n    }\n\n    create () {\n        \n        this.cameras.main.setBounds(0, 0, 1024, 2000);\n        let bg = this.add.image(10, 34, 'incomplete').setOrigin(0);\n        this.cameras.main.startFollow(bg);\n        this.cameras.main.setZoom(2);\n        this.cameras.main.roundPixels = true;\n\n        setTimeout(() => {\n            let trollFace = this.physics.add.image(0, 0, 'troll').setOrigin(0);\n            trollFace.setCollideWorldBounds(true);\n            trollFace.body.allowGravity = false;\n\n            setTimeout(() => {\n                this.scene.start(\"StartScene\");\n            }, 2000);\n        }, 2000);\n\n        // this.keys = this.input.keyboard.addKeys({\n        //     s:  Phaser.Input.Keyboard.KeyCodes.S,\n        //     d:  Phaser.Input.Keyboard.KeyCodes.D,\n        //     w:  Phaser.Input.Keyboard.KeyCodes.W\n        // });\n    }\n};","import CaveScene from \"./scenes/CaveScene.js\";\nimport DesertScene from \"./scenes/DesertScene.js\";\nimport LoadScene from \"./scenes/loadScene.js\";\nimport StartScene from \"./scenes/StartScene.js\";\nimport ToBeContinued from \"./scenes/ToBeContinued.js\";\n\nconst config = {\n    type: Phaser.AUTO,\n    pixelArt: true,\n    title: 'Survive Deeznuts',\n    scale: {\n        parent: 'game-container',\n        autoCenter: Phaser.Scale.CENTER_BOTH\n    },\n    width: 800, \n    height: 1120, \n    physics: {\n        default: 'arcade',\n        arcade: {\n            gravity: { y: 300 }, \n            debug: false,\n        },\n    },\n    scene: [\n         LoadScene,\n         StartScene,\n         DesertScene,\n         ToBeContinued,\n         CaveScene\n    ]\n};\n\nconst game = new Phaser.Game(config);"],"names":["player","invisibox","iceCreams","poops","portals","platform1","platform2","movingPlatform1","movingPlatform2","movingPlatform3","movingPlatform4","stoneBlock","stoneBlockA","cursors","CaveScene","Phaser","Scene","constructor","super","key","preload","this","load","image","spritesheet","frameWidth","frameHeight","create","cameras","main","setBounds","add","setOrigin","physics","sprite","body","setSize","setOffset","allowGravity","setGravity","setVelocityY","startFollow","setZoom","setScale","refreshBody","setImmovable","input","keyboard","createCursorKeys","anims","frames","generateFrameNumbers","frameRate","repeat","start","end","collider","update","left","isDown","setVelocityX","play","right","up","down","gameOver","gameState","score","DesertScene","audio","setScrollFactor","game","renderer","height","staticGroup","setVelocity","tweens","timeline","targets","velocity","loop","x","y","duration","ease","setBounce","setCollideWorldBounds","roundPixels","pickUpSound","sound","explosionSound","portalSound","group","setXY","stepX","children","iterate","child","setBounceY","Math","FloatBetween","scoreText","text","fontSize","fill","overlap","collecticeCream","hitpoop","hitPortal","touching","setAngle","iceCream","disableBody","setText","countActive","enableBody","Between","poop","portal","setTint","scene","pause","width","font","on","restart","LoadScene","loadAudio","setPath","loadBg","loadObjects","loadingText","make","style","percent","depth","assetsText","loadingBar","graphics","loadingBox","fillStyle","fillRect","i","num","clear","parseInt","file","console","log","destroy","setTimeout","StartScene","onClicked","fadeFrom","setVisible","pauseOnBlur","framRate","playButton","setDepth","setInteractive","ToBeContinued","bg","trollFace","config","type","AUTO","pixelArt","title","scale","parent","autoCenter","Scale","CENTER_BOTH","default","arcade","gravity","debug","Game"],"sourceRoot":""}